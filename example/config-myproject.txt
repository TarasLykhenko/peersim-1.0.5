
# parameters of periodic execution
CYCLES 500
CYCLE 1

# random.seed 1234567890
network.size SIZE
simulation.endtime CYCLES
simulation.logtime CYCLE

distinct_groups 1
number_groups_per_node 1

rest_time 20
rest_time_interval 1
debug true
backend causalneighbour

# can be 'file' (reads from other/nodes-to-groups.txt) or 'random' (generates randomly)
groups-config random
# network size

SIZE 200
tree-breadth 2
latency 200
delta 5
publisher 7
crashed-node 2
crash-start 200
crash-end 200

linkable link
causalneighbour causalneighbour
##########################################

################### protocols ===========================

protocol.link peersim.core.IdleProtocol

protocol.causalneighbour example.myproject.server.CausalNeighbourFrontend
protocol.causalneighbour.step CYCLE
protocol.causalneighbour.transport tr
protocol.causalneighbour.linkable link

protocol.urt example.myproject.PointToPointTransport

protocol.tr UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop 0

################### initialization ======================

### Creates graph and sets latencies
init.1 example.myproject.topology.TreeWireTopology
init.1.protocol link

### Inits queues based on graph
init.2 example.myproject.Initialization
init.2.backend  causalneighbour
init.2.linkable link

init.sch CDScheduler
init.sch.protocol causalneighbour
init.sch.randstart

################ control ==============================

control.0 example.myproject.Controller
control.0.protocol causalneighbour
control.0.step CYCLE
control.0.output_file output/