# network size
SIZE 2

# parameters of periodic execution
# CYCLES 200000
CYCLES 10000
CYCLE 1

# parameters of message transfer
# delay values here are relative to cycle length, in percentage,
# eg 50 means half the cycle length, 200 twice the cycle length, etc.
MINDELAY 2
MAXDELAY 8
# drop is a probability, 0<=DROP<=1
DROP 0

# random.seed 1234567890
network.size SIZE
simulation.endtime CYCLE*CYCLES
simulation.logtime CYCLE

########### CLIENT CONFIGS #############
clients_per_datacenter 100
rest_time = 200;
rest_time_interval = 50;

client_read_percentage 95
client_update_percentage 5

#client_read_levels_percentage [5,5,90]
#client_update_levels_percentages [5,5,90]

client_read_levels_percentage [50,50]
client_update_levels_percentages [50,50]

# percentage clients that use objects up to a given distance
# eg. with [50,50], half clients will only use objects from the local DC
# and the other half will use objects from both local and the DCs 1 level away
#client_locality_percentage [0,0,100]
client_locality_percentage [0,100]

clients_eager_percentage 20
########################################

total_objects_per_datacenter 3
#levels 3
#levels_percentage [33,33,34]
levels 2
levels_percentage [50,50]
#groups {[0],[0,1],[0,1,2,3]}{[1],[0,1],[0,1,2,3]}{[2],[2,3],[0,1,2,3]}{[3],[2,3],[0,1,2,3]}
groups {[0],[0,1]}{[1][0,1]}


statistics_window 5

partitions_file example/partitions/four_nodes_all_connected_partition.top
partition_start 110
partition_end 80

tree tree
##########################################

################### protocols ===========================

protocol.link peersim.core.IdleProtocol

protocol.tree example.cops.TreeProtocol
protocol.tree.step CYCLE
protocol.tree.transport tr
protocol.tree.tree_protocol tree
protocol.tree.linkable link

protocol.urt example.cops.PointToPointTransport
protocol.urt.mindelay 0
protocol.urt.maxdelay 100

protocol.tr UnreliableTransport
protocol.tr.transport urt
protocol.tr.drop DROP

################### initialization ======================

### Creates graph and sets latencies
init.1 example.cops.WireTopology
init.1.topology_path example/topologies
init.1.topology_file two_nodes_all_connected.top
init.1.protocol link

### Inits queues based on graph
init.2 example.cops.InitTreeProtocol
init.2.tree_protocol tree
init.2.clients_cycle 1

init.sch CDScheduler
init.sch.protocol tree
init.sch.randstart

################ control ==============================

control.0 example.cops.Controller
control.0.protocol tree
control.0.step CYCLE
control.0.output_file output/optimal5